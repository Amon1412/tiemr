package com.sgtc.countdown.activity;

import androidx.recyclerview.widget.GridLayoutManager;

import android.content.Intent;
import android.os.Bundle;
import android.view.MotionEvent;
import android.view.View;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ScrollView;

import com.sgtc.countdown.R;
import com.sgtc.countdown.adapter.TimerListAdapter;
import com.sgtc.countdown.data.Data;
import com.sgtc.countdown.utils.AnimationUtil;
import com.sgtc.countdown.view.AdaptiveRecyclerView;

public class AddTimerActivity extends BaseActivity {
    Data data = Data.getInstance();
    TimerListAdapter timerInfoAdapterRecent;
    TimerListAdapter timerInfoAdapterDefault;
    ScrollView scrollView;



    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_add_timer);
        initData();
        initView(savedInstanceState);
    }

    @Override
    protected void onResume() {
        super.onResume();
        timerInfoAdapterRecent.setEdit(false);
        timerInfoAdapterDefault.setEdit(false);
        timerInfoAdapterRecent.notifyDataSetChanged();
        timerInfoAdapterDefault.notifyDataSetChanged();
    }

    @Override
    public void onWindowFocusChanged(boolean hasFocus) {
        super.onWindowFocusChanged(hasFocus);
    }

    @Override
    void initView(Bundle savedInstanceState) {
        super.initView(savedInstanceState);
        View icBack = findViewById(R.id.ic_back);
        icBack.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                v.getParent().requestDisallowInterceptTouchEvent(true);
                Intent intent = new Intent(AddTimerActivity.this, MainActivity.class);
                AnimationUtil.animateAndLaunchNewActivity(AddTimerActivity.this, intent);
            }
        });

        View rlHeader = findViewById(R.id.rl_header);
        rlHeader.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent event) {
                return true;
            }
        });

        AdaptiveRecyclerView rv_recent_timer = findViewById(R.id.rv_recent_timer);
        timerInfoAdapterRecent = new TimerListAdapter(this, data.getRecentTimer(), false);
        rv_recent_timer.setAdapter(timerInfoAdapterRecent);
        rv_recent_timer.setLayoutManager(new GridLayoutManager(this, 2) {
            @Override
            public boolean isAutoMeasureEnabled() {
                return true;
            }
        });
        rv_recent_timer.setNestedScrollingEnabled(false);

        AdaptiveRecyclerView rv_default_timer = findViewById(R.id.rv_default_timer);
        timerInfoAdapterDefault = new TimerListAdapter(this, data.getDefaultTimer(), true);
        rv_default_timer.setAdapter(timerInfoAdapterDefault);;
        rv_default_timer.setLayoutManager(new GridLayoutManager(this, 2) {
            @Override
            public boolean isAutoMeasureEnabled() {
                return true;
            }
        });
        rv_default_timer.setNestedScrollingEnabled(false);

        CheckBox cb_edit = findViewById(R.id.cb_edit);
        cb_edit.setOnCheckedChangeListener((buttonView, isChecked) -> {
            timerInfoAdapterRecent.setEdit(isChecked);
            timerInfoAdapterDefault.setEdit(isChecked);
            if (isChecked) {
                cb_edit.setText(getText(R.string.edit_complete));
            } else {
                cb_edit.setText(getText(R.string.edit));
            }
        });

        scrollView = findViewById(R.id.sv_add_timer);
        View tvTimer = findViewById(R.id.tv_timer_text);

        onStartAnimateViews.add(scrollView);
        onStartAnimationTypes.add(AnimationUtil.ANIMATION_FADE_IN_UP);
        onStartAnimateViews.add(icBack);
        onStartAnimationTypes.add(AnimationUtil.ANIMATION_FADE_IN);
        onStartAnimateViews.add(tvTimer);
        onStartAnimationTypes.add(AnimationUtil.ANIMATION_FADE_IN);

    }



}
